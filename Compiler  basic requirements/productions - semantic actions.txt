PROGRAM -> DECL_LIBRARIES class ID begin DECL_VARIABLES STATEMENTS end

DECL_LIBRARIES -> import ID_LIBRARY ; DECL_LIBRARIES
DECL_LIBRARIES -> ε

DECL_VARIABLES -> def .BOTTOM VARIABLES as TYPE .TYPE .BOTTOM ; DECL_VARIABLES
DECL_VARIABLES -> ε

VARIABLES -> ID .ID MORE_VARIABLES
MORE_VARIABLES -> , VARIABLES
MORE_VARIABLES -> ε

TYPE -> integer
TYPE -> float
TYPE -> char
TYPE -> string
TYPE -> boolean

STATEMENTS -> STATEMENT ; STATEMENTS
STATEMENTS -> ε
STATEMENT -> ASSIGNMENT
STATEMENT -> IF
STATEMENT -> WHILE
STATEMENT -> FOR
STATEMENT -> READ
STATEMENT -> WRITE
STATEMENT -> ENTER

ASSIGNMENT -> ID = .OPERATOR EXPRESSION_0 .ASSIGNMENT

EXPRESSION_0 -> EXPRESSION_1 DISJUNCTION
DISJUNCTION -> || .OPERATOR EXPRESSION_0 .OR
DISJUNCTION -> ε

EXPRESSION_1 -> EXPRESSION_2 CONJUNCTION
CONJUNCTION -> && .OPERATOR EXPRESSION_1 .AND
CONJUNCTION -> ε

EXPRESSION_2 -> NEGATION EXPRESSION_3 .NOT
NEGATION -> ! .OPERATOR
NEGATION -> ε

EXPRESSION_3 -> EXPRESSION_4 COMPARISON
COMPARISON -> RELATIONAL_OPERATOR .OPERATOR EXPRESSION_4 .RELATIONAL
COMPARISON -> ε

RELATIONAL_OPERATOR -> ==
RELATIONAL_OPERATOR -> !=
RELATIONAL_OPERATOR -> <
RELATIONAL_OPERATOR -> <=
RELATIONAL_OPERATOR -> >
RELATIONAL_OPERATOR -> >=

EXPRESSION_4 -> ADDEND ADDITION
ADDITION -> + .OPERATOR EXPRESSION_4 .ADDITION
ADDITION -> - .OPERATOR EXPRESSION_4 .ADDITION
ADDITION -> ε
ADDEND -> FACTOR MULTIPLICATION

MULTIPLICATION -> * .OPERATOR ADDEND .MULTIPLICATION
MULTIPLICATION -> / .OPERATOR ADDEND .MULTIPLICATION
MULTIPLICATION -> % .OPERATOR ADDEND .MULTIPLICATION
MULTIPLICATION -> ε

FACTOR -> ID .FACTOR_ID
FACTOR -> CONST_INTEGER .FACTOR_INT
FACTOR -> CONST_REAL .FACTOR_REAL
FACTOR -> CONST_REAL_SCI .FACTOR_REAL
FACTOR -> CONST_CHAR .FACTOR_CHAR
FACTOR -> CONST_STRING .FACTOR_STR
FACTOR -> ( .BOTTOM EXPRESSION_0 ) .BOTTOM_D

IF -> if .BOTTOM ( EXPRESSION_0 ) .GO_TO_FALSE STATEMENTS ELSE endif .FILL_JUMP .BOTTOM_D
ELSE -> else .GO_TO STATEMENTS
ELSE -> ε

WHILE -> while ( EXPRESSION_0 ) .GO_TO_FALSE STATEMENTS endwhile .GO_TO .FILL_JUMP

FOR -> for ( ASSIGNMENT : EXPRESSION_0 ) .GO_TO_TRUE STATEMENTS endfor .GO_TO .FILL_JUMP

EXPRESSIONS -> EXPRESSION_0 MORE_EXPRESSIONS
MORE_EXPRESSIONS -> , EXPRESSIONS
MORE_EXPRESSIONS -> ε

READ -> read ( EXPRESSIONS ) .READ

WRITE -> write ( EXPRESSIONS ) .WRITE

ENTER -> enter .ENTER
